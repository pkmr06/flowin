/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SuccessRouteImport } from './routes/success'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as ShutdownIndexRouteImport } from './routes/shutdown/index'
import { Route as FocusIndexRouteImport } from './routes/focus/index'
import { Route as AnalyticsIndexRouteImport } from './routes/analytics/index'
import { Route as OnboardingFirstTasksRouteImport } from './routes/onboarding/first-tasks'
import { Route as OnboardingDemoRouteImport } from './routes/onboarding/demo'
import { Route as AuthVerifyRouteImport } from './routes/auth/verify'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const SuccessRoute = SuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShutdownIndexRoute = ShutdownIndexRouteImport.update({
  id: '/shutdown/',
  path: '/shutdown/',
  getParentRoute: () => rootRouteImport,
} as any)
const FocusIndexRoute = FocusIndexRouteImport.update({
  id: '/focus/',
  path: '/focus/',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsIndexRoute = AnalyticsIndexRouteImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingFirstTasksRoute = OnboardingFirstTasksRouteImport.update({
  id: '/onboarding/first-tasks',
  path: '/onboarding/first-tasks',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingDemoRoute = OnboardingDemoRouteImport.update({
  id: '/onboarding/demo',
  path: '/onboarding/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/auth/verify',
  path: '/auth/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/success': typeof SuccessRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/onboarding/demo': typeof OnboardingDemoRoute
  '/onboarding/first-tasks': typeof OnboardingFirstTasksRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/focus': typeof FocusIndexRoute
  '/shutdown': typeof ShutdownIndexRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/success': typeof SuccessRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/onboarding/demo': typeof OnboardingDemoRoute
  '/onboarding/first-tasks': typeof OnboardingFirstTasksRoute
  '/analytics': typeof AnalyticsIndexRoute
  '/focus': typeof FocusIndexRoute
  '/shutdown': typeof ShutdownIndexRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/success': typeof SuccessRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/onboarding/demo': typeof OnboardingDemoRoute
  '/onboarding/first-tasks': typeof OnboardingFirstTasksRoute
  '/analytics/': typeof AnalyticsIndexRoute
  '/focus/': typeof FocusIndexRoute
  '/shutdown/': typeof ShutdownIndexRoute
  '/tasks/': typeof TasksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/success'
    | '/auth/login'
    | '/auth/verify'
    | '/onboarding/demo'
    | '/onboarding/first-tasks'
    | '/analytics'
    | '/focus'
    | '/shutdown'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/success'
    | '/auth/login'
    | '/auth/verify'
    | '/onboarding/demo'
    | '/onboarding/first-tasks'
    | '/analytics'
    | '/focus'
    | '/shutdown'
    | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/success'
    | '/auth/login'
    | '/auth/verify'
    | '/onboarding/demo'
    | '/onboarding/first-tasks'
    | '/analytics/'
    | '/focus/'
    | '/shutdown/'
    | '/tasks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  SuccessRoute: typeof SuccessRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
  OnboardingDemoRoute: typeof OnboardingDemoRoute
  OnboardingFirstTasksRoute: typeof OnboardingFirstTasksRoute
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
  FocusIndexRoute: typeof FocusIndexRoute
  ShutdownIndexRoute: typeof ShutdownIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/success': {
      id: '/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof SuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shutdown/': {
      id: '/shutdown/'
      path: '/shutdown'
      fullPath: '/shutdown'
      preLoaderRoute: typeof ShutdownIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/focus/': {
      id: '/focus/'
      path: '/focus'
      fullPath: '/focus'
      preLoaderRoute: typeof FocusIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/first-tasks': {
      id: '/onboarding/first-tasks'
      path: '/onboarding/first-tasks'
      fullPath: '/onboarding/first-tasks'
      preLoaderRoute: typeof OnboardingFirstTasksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/demo': {
      id: '/onboarding/demo'
      path: '/onboarding/demo'
      fullPath: '/onboarding/demo'
      preLoaderRoute: typeof OnboardingDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/auth/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  SuccessRoute: SuccessRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthVerifyRoute: AuthVerifyRoute,
  OnboardingDemoRoute: OnboardingDemoRoute,
  OnboardingFirstTasksRoute: OnboardingFirstTasksRoute,
  AnalyticsIndexRoute: AnalyticsIndexRoute,
  FocusIndexRoute: FocusIndexRoute,
  ShutdownIndexRoute: ShutdownIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
